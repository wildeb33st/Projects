library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity test_bench is
--  Port ( );
end test_bench;

architecture a of test_bench is
-- VALIDATE THESE CLOCK TIMES!!!!!!!
    constant CLOCK_PERIOD    : time := 125 ps;
    constant SIMULATION_TIME : time := 1 sec;

    signal clk      : std_logic := '0';
    
 --   signal din      : std_logic_vector(15 downto 0):=(others => '0');
 --   signal dout     : std_logic_vector(15 downto 0);
 
---------------------------------------------------------------------------------------------------------------------------------    
--Below are interconnecting signals etc. for components

-- This is for the read line for taking data from fileRd component output (data)
-- to DUT component input (din)
    signal readLn :  std_logic_vector (15 downto 0);
    
--Write line signal is used for moving data from the output of the DUT component
-- to the input of the fileWr component    
    signal writeLn : std_logic_vector (15 downto 0);
    
--DV line for the purpose of letting DUT know when a signal is incoming
    signal dvLn : std_logic;
        
-- Reset signal for reader
signal rst    : std_logic := '0';

--Rfd signal for reader
signal rfd : std_logic := '1';

--constant for reader to state bit width
constant numOfBits : integer := 16;

--constant for readfile
constant file_name : string := "/home/gear/FPAGA/Labs/Lab11_2/data2fpga.dat";

--constant for written file
constant file_name_wr : string := "/home/gear/FPAGA/Labs/Lab11_2/data_from_fpga.dat";
----------------------------------------------------------------------------------------------------------------------------------
--Components

--Lab11 Component i.e. The Device Under Test (DUT)
    component lab111 is
        Port ( clk : in STD_LOGIC;
               din : in STD_LOGIC_VECTOR (15 downto 0);
               dout : out STD_LOGIC_VECTOR (15 downto 0);
               dv : in std_logic
              );
    end component lab111;
    
--Component to read the Sine Wave Amplitude Values that were generated by MATLAB Script
component ReadFile is
        generic(
                 numOfBits : integer;
                 file_name : string
               ); 
        Port (
                data : out std_logic_vector ((numOfBits-1) downto 0);
                dv: out std_logic;
                rst : in std_logic;
                rfd : in std_logic;
                clk : in std_logic        
              );    
end component ReadFile;

--Component for writing FPGA results to another file
component WriteFile_full
        generic(
                 numOfBits : integer;
                 file_name : string
               );
        Port (
                clk,dv,sign : in std_logic;
                DataIn : in std_logic_vector ((numOfBits-1) downto 0)
              );
end component WriteFile_full;              
------------------------------------------------------------------------------------------------------------------------------------
begin

  -----------------------------------------------------------------------
  -- Generate clock
  -----------------------------------------------------------------------
  clock_gen : process
  begin
    clk <= '0';
    wait for CLOCK_PERIOD;
    loop
      clk <= '1';
      wait for CLOCK_PERIOD/2;
      clk <= '0';
      wait for CLOCK_PERIOD/2;
    end loop;
  end process clock_gen;
  -----------------------------------------------------------------------
  -- Generate start
  -----------------------------------------------------------------------
  start_gen : process
  begin
    rst <= '0';
    wait for CLOCK_PERIOD;
    wait for CLOCK_PERIOD;
    wait for CLOCK_PERIOD;
    rst <= '1';
    
    wait for CLOCK_PERIOD;
    rst <= '0';
    wait;
  end process start_gen;
  ---------------------------------------------------------------------
  -- Instantiate the DUT
  ---------------------------------------------------------------------
  dut : lab111
    port map (
        -- Inputs
        clk => clk,
        din => readLn,
        dv => dvLn,
        -- Outputs
        dout  => writeLn);

  ---------------------------------------------------------------------
  -- Instantiate the Reader to read from file
  ---------------------------------------------------------------------
  reader : ReadFile
    generic map (
                    numOfBits => numOfBits,
                    file_name => file_name
                )
    port map (
                data => readLn,
                dv => dvLn,
                clk => clk,
                rst => rst,
                rfd => rfd                
              );      
        
  ---------------------------------------------------------------------
  -- Instantiate the writer to write to a file
  ---------------------------------------------------------------------
  writer : WriteFile_full
    generic map (
                    numOfBits => numOfBits,
                    file_name => file_name_wr
                )
    port map (
                dv => dvLn,
                clk => clk,
                sign => writeLn(15), 
                DataIn => writeLn
              );      

  
end architecture;